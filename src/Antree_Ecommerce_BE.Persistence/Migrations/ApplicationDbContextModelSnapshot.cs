// <auto-generated />
using System;
using Antree_Ecommerce_BE.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Antree_Ecommerce_BE.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("UserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("OrderDetailFeedbackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderDetailFeedbackId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderDetailFeedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderDetailFeedback", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Cvc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Expire")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderPayment", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sku")
                        .HasColumnType("int");

                    b.Property<int>("Sold")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fe4066b-8ff3-4ab9-96e7-5192dc9a3ee6"),
                            CreatedBy = new Guid("49eab349-d064-42b2-ab8b-fc75dc8e3bca"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description0",
                            IsDeleted = false,
                            Name = "Name0",
                            Price = 0m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 0,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3bdd3813-9151-493e-a925-26aefe58e09f"),
                            CreatedBy = new Guid("676ac3af-df7d-4aec-a1f7-78fe9f26a1cd"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description1",
                            IsDeleted = false,
                            Name = "Name1",
                            Price = 1m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 1,
                            Sold = 1,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("081cd2a3-317b-47e8-86ae-410a0bd8155c"),
                            CreatedBy = new Guid("a4eaa2eb-8cbc-44d1-ba80-1d503bf6b6a2"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description2",
                            IsDeleted = false,
                            Name = "Name2",
                            Price = 2m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 2,
                            Sold = 2,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("bd1fe782-4254-4ca9-9155-84a951f56e41"),
                            CreatedBy = new Guid("fdc463b1-86a7-4e35-af7d-62adbe226fa8"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description3",
                            IsDeleted = false,
                            Name = "Name3",
                            Price = 3m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 3,
                            Sold = 3,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7f3268fe-8b09-4f06-ad78-18891aeb19de"),
                            CreatedBy = new Guid("99054710-cfda-4204-94f8-12ecbe6dd72f"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description4",
                            IsDeleted = false,
                            Name = "Name4",
                            Price = 4m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 4,
                            Sold = 4,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("bde358c3-0848-49fe-a11b-decaf8529674"),
                            CreatedBy = new Guid("b20657c5-ffcb-4ca4-8707-907bfa4ac086"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description5",
                            IsDeleted = false,
                            Name = "Name5",
                            Price = 5m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 5,
                            Sold = 5,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("fe2092ac-8b61-40cb-944b-399a839fea2e"),
                            CreatedBy = new Guid("4c97716a-09f7-419d-b578-f91d382dc22b"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description6",
                            IsDeleted = false,
                            Name = "Name6",
                            Price = 6m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 6,
                            Sold = 6,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("18551822-d178-410d-b316-e3b7a48f2327"),
                            CreatedBy = new Guid("27e45c7b-c128-48ca-99a4-ded505998596"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description7",
                            IsDeleted = false,
                            Name = "Name7",
                            Price = 7m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 7,
                            Sold = 7,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("247df0a4-3cf6-410d-bb95-e220214e0cc5"),
                            CreatedBy = new Guid("b2dca98c-8a3b-441c-9632-8e0f378de98c"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description8",
                            IsDeleted = false,
                            Name = "Name8",
                            Price = 8m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 8,
                            Sold = 8,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d22bc410-8c42-4ad8-9042-f18476e6b20f"),
                            CreatedBy = new Guid("e609eb4c-0d92-41ef-899a-0b80bc45edd6"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description9",
                            IsDeleted = false,
                            Name = "Name9",
                            Price = 9m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 9,
                            Sold = 9,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0a5a5fab-ec30-48dc-aec6-4600ce5f0d45"),
                            CreatedBy = new Guid("8b879138-f5a7-4c9f-97a4-a00501bc758b"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description10",
                            IsDeleted = false,
                            Name = "Name10",
                            Price = 10m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 10,
                            Sold = 10,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("dc8171e6-30b6-429f-a0c3-2620320d1cd0"),
                            CreatedBy = new Guid("cbbd6f60-df43-48a8-a5da-dde02c90831b"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description11",
                            IsDeleted = false,
                            Name = "Name11",
                            Price = 11m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 11,
                            Sold = 11,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("eb6f88b9-3b1c-4ca1-9bfd-cfd8c8c2ceb1"),
                            CreatedBy = new Guid("d1320b2b-2c4a-4c9d-aa48-99e4ee1e2352"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description12",
                            IsDeleted = false,
                            Name = "Name12",
                            Price = 12m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 12,
                            Sold = 12,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3ed74aa3-3446-4e8f-ad03-afa45af50585"),
                            CreatedBy = new Guid("9b2f3c91-9281-4138-9173-759f685a164d"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description13",
                            IsDeleted = false,
                            Name = "Name13",
                            Price = 13m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 13,
                            Sold = 13,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("cc62bc1a-0ba8-4ad8-a9c8-b45efc95362c"),
                            CreatedBy = new Guid("faafc77c-80c2-4ecb-9cf7-f562aee3ac01"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description14",
                            IsDeleted = false,
                            Name = "Name14",
                            Price = 14m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 14,
                            Sold = 14,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("ec537ead-ee34-4c93-a8b1-cd900f45a585"),
                            CreatedBy = new Guid("f9f18f22-48bb-4496-be24-343f4d720926"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description15",
                            IsDeleted = false,
                            Name = "Name15",
                            Price = 15m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 15,
                            Sold = 15,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a3aba024-b0f1-4f6b-96e9-44cce1aaa677"),
                            CreatedBy = new Guid("1fca9704-74ea-4928-8cca-25a4f1a13001"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description16",
                            IsDeleted = false,
                            Name = "Name16",
                            Price = 16m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 16,
                            Sold = 16,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("923680b9-5d59-4b79-82cb-31758a8ed49b"),
                            CreatedBy = new Guid("a79972ad-0bdd-404f-91c1-292e3aff397f"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description17",
                            IsDeleted = false,
                            Name = "Name17",
                            Price = 17m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 17,
                            Sold = 17,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e4256ddf-4fa6-4196-8bf3-52b49d0f39bd"),
                            CreatedBy = new Guid("e215df14-2fdb-43d1-8dc3-7b4d614ec238"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description18",
                            IsDeleted = false,
                            Name = "Name18",
                            Price = 18m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 18,
                            Sold = 18,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("de611e5d-dc15-4449-ae36-9b9fe9815464"),
                            CreatedBy = new Guid("0193206d-5591-4e57-9407-3e6f486308b2"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description19",
                            IsDeleted = false,
                            Name = "Name19",
                            Price = 19m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 19,
                            Sold = 19,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("035db23f-50a0-42c2-9a8c-4010c284e131"),
                            CreatedBy = new Guid("156eba97-5c8d-4bc4-963b-1595a2e0b3ee"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description20",
                            IsDeleted = false,
                            Name = "Name20",
                            Price = 20m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 20,
                            Sold = 20,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a50e82cd-c7f7-4afc-ae3b-78bdf5a97596"),
                            CreatedBy = new Guid("a4aa889a-2a8f-4800-8ae8-850a409ec149"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description21",
                            IsDeleted = false,
                            Name = "Name21",
                            Price = 21m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 21,
                            Sold = 21,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5e78d482-6d85-47da-8b3e-5a9714a9fbaf"),
                            CreatedBy = new Guid("a3a4037e-7043-4e64-bfb3-39ac007e8a90"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description22",
                            IsDeleted = false,
                            Name = "Name22",
                            Price = 22m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 22,
                            Sold = 22,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9920f997-a9e0-4b55-b047-a62cb5530a9a"),
                            CreatedBy = new Guid("65cd6ceb-cd33-4653-a1b4-7b2c6c13fa83"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description23",
                            IsDeleted = false,
                            Name = "Name23",
                            Price = 23m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 23,
                            Sold = 23,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("10dc944c-f136-4093-851d-92b890ad024d"),
                            CreatedBy = new Guid("449ca53b-c168-4bea-9777-17f7ab768f0a"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description24",
                            IsDeleted = false,
                            Name = "Name24",
                            Price = 24m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 24,
                            Sold = 24,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f7ff267b-8dd5-4c25-9d72-693c072e33fd"),
                            CreatedBy = new Guid("7cfb18c9-1f71-41d4-92fc-4c10f4e1b393"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description25",
                            IsDeleted = false,
                            Name = "Name25",
                            Price = 25m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 25,
                            Sold = 25,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("afac6909-4e99-48fc-b191-34b2100be8bd"),
                            CreatedBy = new Guid("9fcc41b6-20c6-49cc-8962-9bb5f36adb39"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description26",
                            IsDeleted = false,
                            Name = "Name26",
                            Price = 26m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 26,
                            Sold = 26,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("33e267dc-cab6-44a0-ae9a-f2788325fbe5"),
                            CreatedBy = new Guid("c98cecb1-6aed-4a83-aac8-3f3afeeb2577"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description27",
                            IsDeleted = false,
                            Name = "Name27",
                            Price = 27m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 27,
                            Sold = 27,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("991b70df-c956-4eb2-9cb8-24bd2627166c"),
                            CreatedBy = new Guid("5a6f6608-9b9a-4aae-8f81-e4e6409f4d87"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description28",
                            IsDeleted = false,
                            Name = "Name28",
                            Price = 28m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 28,
                            Sold = 28,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6230dc70-0501-4424-849b-bc01b403db77"),
                            CreatedBy = new Guid("2ca0f38f-bd39-493b-9e1f-250443372c6b"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description29",
                            IsDeleted = false,
                            Name = "Name29",
                            Price = 29m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 29,
                            Sold = 29,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0ea5a45c-5171-4c03-b6ce-1cb32a68e5b2"),
                            CreatedBy = new Guid("0dc53de2-e6c0-424e-afeb-6045f4600646"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description30",
                            IsDeleted = false,
                            Name = "Name30",
                            Price = 30m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 30,
                            Sold = 30,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e0547aff-d5b2-4692-ba7d-255676c464eb"),
                            CreatedBy = new Guid("0a2b8964-897d-44ba-974b-06e05a45da98"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description31",
                            IsDeleted = false,
                            Name = "Name31",
                            Price = 31m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 31,
                            Sold = 31,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("694ebc77-a160-420c-a13c-c4965136de6a"),
                            CreatedBy = new Guid("e6bf1a93-3b39-4045-a456-613b34400c15"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description32",
                            IsDeleted = false,
                            Name = "Name32",
                            Price = 32m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 32,
                            Sold = 32,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("399d508e-a90a-46b5-b86f-c3629b0e08f8"),
                            CreatedBy = new Guid("ccc97a08-ec49-4497-8e66-61b2a9a54cc8"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description33",
                            IsDeleted = false,
                            Name = "Name33",
                            Price = 33m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 33,
                            Sold = 33,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("131952c0-4b19-41ba-bb77-096fdd70e5a5"),
                            CreatedBy = new Guid("c7097ab3-8d17-4d6d-ad26-704216ddb32a"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description34",
                            IsDeleted = false,
                            Name = "Name34",
                            Price = 34m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 34,
                            Sold = 34,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7e49ce25-9abe-48d3-81f3-b9612d873c17"),
                            CreatedBy = new Guid("2daf51fa-b13b-4832-8a07-d5eb45b24897"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description35",
                            IsDeleted = false,
                            Name = "Name35",
                            Price = 35m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 35,
                            Sold = 35,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("032c30ad-e370-4d66-8ae1-6e3867fbfe78"),
                            CreatedBy = new Guid("6fd0f093-7a77-4419-93ad-434a6de1a925"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description36",
                            IsDeleted = false,
                            Name = "Name36",
                            Price = 36m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 36,
                            Sold = 36,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("4472b9ea-d125-4d16-a43a-2db499858b88"),
                            CreatedBy = new Guid("4c2615e3-6bd8-4130-beac-4a49fc1d3466"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description37",
                            IsDeleted = false,
                            Name = "Name37",
                            Price = 37m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 37,
                            Sold = 37,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("16e96709-19ee-447e-af59-d6ffc8923c49"),
                            CreatedBy = new Guid("770410f5-a3a7-4a74-b583-95f914a00c0d"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description38",
                            IsDeleted = false,
                            Name = "Name38",
                            Price = 38m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 38,
                            Sold = 38,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("905e2a23-2d1e-490f-90f1-336e35cbd02c"),
                            CreatedBy = new Guid("96dd32e0-7ae2-4b8e-a159-34a073b4fdcc"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description39",
                            IsDeleted = false,
                            Name = "Name39",
                            Price = 39m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 39,
                            Sold = 39,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a9473748-afc8-48a8-ab01-c9b3f7093b32"),
                            CreatedBy = new Guid("1b088875-9624-4355-a494-26ff8c3a6128"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description40",
                            IsDeleted = false,
                            Name = "Name40",
                            Price = 40m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 40,
                            Sold = 40,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            CreatedBy = new Guid("2cd8a571-f443-4623-97dd-c8d4a41a80bf"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Des1",
                            IsDeleted = false,
                            Name = "Cate1",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            CreatedBy = new Guid("2cd8a571-f443-4623-97dd-c8d4a41a80bf"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Des2",
                            IsDeleted = false,
                            Name = "Cate2",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8d81bd6c-b108-4611-acee-ef78286eec24"),
                            CreatedBy = new Guid("2cd8a571-f443-4623-97dd-c8d4a41a80bf"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Des3",
                            IsDeleted = false,
                            Name = "Cate3",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDiscount", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductFeedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFeedback", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.UserAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrder")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddress", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.UserPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Cvc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTimeOffset>("Expire")
                        .HasMaxLength(20)
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrder")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserPayment", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Order", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Discount", "Discount")
                        .WithMany("OrderList")
                        .HasForeignKey("DiscountId");

                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.OrderDetailFeedback", "OrderDetailFeedback")
                        .WithMany()
                        .HasForeignKey("OrderDetailFeedbackId");

                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetailList")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Product", "Product")
                        .WithMany("OrderDetailList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("OrderDetailFeedback");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderPayment", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Product", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.ProductCategory", "ProductCategory")
                        .WithMany("ProductList")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductDiscount", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Product", "Product")
                        .WithMany("ProductDiscountList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductFeedback", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Product", "Product")
                        .WithMany("ProductFeedbackList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.UserAddress", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.User", "User")
                        .WithMany("UserAddressList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.UserPayment", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.User", "User")
                        .WithMany("UserPaymentList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Discount", b =>
                {
                    b.Navigation("OrderList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetailList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Product", b =>
                {
                    b.Navigation("OrderDetailList");

                    b.Navigation("ProductDiscountList");

                    b.Navigation("ProductFeedbackList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductCategory", b =>
                {
                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.User", b =>
                {
                    b.Navigation("UserAddressList");

                    b.Navigation("UserPaymentList");
                });
#pragma warning restore 612, 618
        }
    }
}
