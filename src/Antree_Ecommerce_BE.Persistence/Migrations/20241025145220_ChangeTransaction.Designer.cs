// <auto-generated />
using System;
using Antree_Ecommerce_BE.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Antree_Ecommerce_BE.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241025145220_ChangeTransaction")]
    partial class ChangeTransaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeedback")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("UserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("OrderDetailFeedbackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductPriceDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderDetailFeedbackId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderDetailFeedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderDetailFeedback", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderDetailFeedbackMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("OrderDetailFeedbackId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderDetailFeedbackId");

                    b.ToTable("OrderDetailFeedbackMedia", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Cvc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Expire")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderPayment", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountSold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sku")
                        .HasColumnType("int");

                    b.Property<int>("Sold")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("VendorId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6025d180-cecd-41cc-b2ab-eb7cd91d48bd"),
                            CoverImage = "",
                            CreatedBy = new Guid("b187e099-e49d-43e4-a0f0-95036ae4ac86"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description0",
                            DiscountPercent = 0m,
                            DiscountSold = 0m,
                            IsDeleted = false,
                            Name = "Name0",
                            Price = 0m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 0,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("786cfd24-ac8a-4dd0-87b7-1360a577b677"),
                            CoverImage = "",
                            CreatedBy = new Guid("a57a99aa-3e4f-408d-92ee-ff11f6f192fc"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description1",
                            DiscountPercent = 0m,
                            DiscountSold = 1000m,
                            IsDeleted = false,
                            Name = "Name1",
                            Price = 1000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 1,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("0a3b835c-7699-411c-b6d3-8cd6f529865e"),
                            CoverImage = "",
                            CreatedBy = new Guid("030409de-dc30-4d56-9777-1c8618ed9145"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description2",
                            DiscountPercent = 0m,
                            DiscountSold = 2000m,
                            IsDeleted = false,
                            Name = "Name2",
                            Price = 2000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 2,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("b5b33ce2-d2d3-45c0-8074-f19cecf72c3c"),
                            CoverImage = "",
                            CreatedBy = new Guid("7f863542-f848-454f-bd5c-ffd3b0846fae"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description3",
                            DiscountPercent = 0m,
                            DiscountSold = 3000m,
                            IsDeleted = false,
                            Name = "Name3",
                            Price = 3000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 3,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("8420ba5a-6398-4fd9-8872-efd7d15f98e7"),
                            CoverImage = "",
                            CreatedBy = new Guid("a89380ea-cd86-481a-accc-d16c871b9052"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description4",
                            DiscountPercent = 0m,
                            DiscountSold = 4000m,
                            IsDeleted = false,
                            Name = "Name4",
                            Price = 4000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 4,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("db1aa07f-a34c-4352-ad20-6ccffafffe26"),
                            CoverImage = "",
                            CreatedBy = new Guid("535c49cc-4f1d-4d79-901a-b5b8a6234742"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description5",
                            DiscountPercent = 0m,
                            DiscountSold = 5000m,
                            IsDeleted = false,
                            Name = "Name5",
                            Price = 5000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 5,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("ee47df60-bc29-4bc5-9b3f-afe9e8547322"),
                            CoverImage = "",
                            CreatedBy = new Guid("5242f491-4bd6-4c14-a182-e1ad767697fa"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description6",
                            DiscountPercent = 0m,
                            DiscountSold = 6000m,
                            IsDeleted = false,
                            Name = "Name6",
                            Price = 6000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 6,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("28f17455-4003-470d-866c-25c17c26cd2e"),
                            CoverImage = "",
                            CreatedBy = new Guid("161df38b-10e2-4cde-aff8-e6860cf5b383"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description7",
                            DiscountPercent = 0m,
                            DiscountSold = 7000m,
                            IsDeleted = false,
                            Name = "Name7",
                            Price = 7000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 7,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("bc431149-c1d1-49b0-b467-3be31acadd57"),
                            CoverImage = "",
                            CreatedBy = new Guid("4433b72c-d9a2-4d3d-9d25-706ad5124b87"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description8",
                            DiscountPercent = 0m,
                            DiscountSold = 8000m,
                            IsDeleted = false,
                            Name = "Name8",
                            Price = 8000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 8,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("ffc676c0-8ff8-4fc1-9c38-f6211af1de2a"),
                            CoverImage = "",
                            CreatedBy = new Guid("7497c0d3-c936-40c4-b59a-cedcc03af27c"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description9",
                            DiscountPercent = 0m,
                            DiscountSold = 9000m,
                            IsDeleted = false,
                            Name = "Name9",
                            Price = 9000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 9,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("28f6da46-e622-49b4-9c0c-2b710d842f64"),
                            CoverImage = "",
                            CreatedBy = new Guid("73bf81b3-c7ce-4696-b53f-323ceacd1d3f"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description10",
                            DiscountPercent = 0m,
                            DiscountSold = 10000m,
                            IsDeleted = false,
                            Name = "Name10",
                            Price = 10000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 10,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("52ab0332-4a7c-4d9a-a7fc-63a46ee8ab04"),
                            CoverImage = "",
                            CreatedBy = new Guid("402d4479-2430-4307-9687-5acc6a7c4d83"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description11",
                            DiscountPercent = 0m,
                            DiscountSold = 11000m,
                            IsDeleted = false,
                            Name = "Name11",
                            Price = 11000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 11,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("70155627-ff2d-411d-8115-8842677a2fca"),
                            CoverImage = "",
                            CreatedBy = new Guid("9279d37e-0456-4b97-926e-6e5016936000"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description12",
                            DiscountPercent = 0m,
                            DiscountSold = 12000m,
                            IsDeleted = false,
                            Name = "Name12",
                            Price = 12000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 12,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("502a9d5d-1a55-4e75-9d58-883b6cf09066"),
                            CoverImage = "",
                            CreatedBy = new Guid("57ac70dc-ceb1-44ca-b3f9-428e837944fe"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description13",
                            DiscountPercent = 0m,
                            DiscountSold = 13000m,
                            IsDeleted = false,
                            Name = "Name13",
                            Price = 13000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 13,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("a4c88770-4213-4a49-a8b7-600d8e1296e8"),
                            CoverImage = "",
                            CreatedBy = new Guid("1ced272e-000b-47fa-9dd6-58ac52639350"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description14",
                            DiscountPercent = 0m,
                            DiscountSold = 14000m,
                            IsDeleted = false,
                            Name = "Name14",
                            Price = 14000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 14,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("795c30cf-d224-4192-bf5f-bf80a3ad59bc"),
                            CoverImage = "",
                            CreatedBy = new Guid("a5c6e14e-8194-4272-899a-8e590bee34a5"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description15",
                            DiscountPercent = 0m,
                            DiscountSold = 15000m,
                            IsDeleted = false,
                            Name = "Name15",
                            Price = 15000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 15,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("e4f6eb34-07e0-4307-b87f-ae838b945670"),
                            CoverImage = "",
                            CreatedBy = new Guid("5764f64c-2117-42cc-beab-1fe9d868c789"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description16",
                            DiscountPercent = 0m,
                            DiscountSold = 16000m,
                            IsDeleted = false,
                            Name = "Name16",
                            Price = 16000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 16,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("cf8e9fe3-3943-4f54-91da-a0cad92f2a21"),
                            CoverImage = "",
                            CreatedBy = new Guid("20554d7c-9d11-4680-acf4-6773543db947"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description17",
                            DiscountPercent = 0m,
                            DiscountSold = 17000m,
                            IsDeleted = false,
                            Name = "Name17",
                            Price = 17000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 17,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("07c87b27-4993-464a-a0b0-6d6fc597ba7d"),
                            CoverImage = "",
                            CreatedBy = new Guid("1d02489c-fe00-4020-a490-41eec15516ad"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description18",
                            DiscountPercent = 0m,
                            DiscountSold = 18000m,
                            IsDeleted = false,
                            Name = "Name18",
                            Price = 18000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 18,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("e1ab5561-5807-46bc-800c-222a68806f3f"),
                            CoverImage = "",
                            CreatedBy = new Guid("62718030-d393-4cc1-970f-c3df5a9b7b67"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description19",
                            DiscountPercent = 0m,
                            DiscountSold = 19000m,
                            IsDeleted = false,
                            Name = "Name19",
                            Price = 19000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 19,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("c185291e-e439-4902-8a47-b14f68bf2678"),
                            CoverImage = "",
                            CreatedBy = new Guid("812b7774-b6db-43f7-83f6-321572d7936c"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description20",
                            DiscountPercent = 0m,
                            DiscountSold = 20000m,
                            IsDeleted = false,
                            Name = "Name20",
                            Price = 20000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 20,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("e1d2e020-7bbb-41f4-82fb-57989926e9b7"),
                            CoverImage = "",
                            CreatedBy = new Guid("1d307690-a6b6-48f3-9ff5-58c698d94221"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description21",
                            DiscountPercent = 0m,
                            DiscountSold = 21000m,
                            IsDeleted = false,
                            Name = "Name21",
                            Price = 21000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 21,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("e4a5e285-2a0e-4353-995a-06af97335943"),
                            CoverImage = "",
                            CreatedBy = new Guid("f94b5fcd-4f8a-4229-ad3a-7879edcbc52b"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description22",
                            DiscountPercent = 0m,
                            DiscountSold = 22000m,
                            IsDeleted = false,
                            Name = "Name22",
                            Price = 22000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 22,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("d736e995-5d8a-4e5b-8cfc-b5f3d9aec89d"),
                            CoverImage = "",
                            CreatedBy = new Guid("1816b536-eb71-48a1-9322-3e503ae8506a"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description23",
                            DiscountPercent = 0m,
                            DiscountSold = 23000m,
                            IsDeleted = false,
                            Name = "Name23",
                            Price = 23000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 23,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("b7d2af14-7235-42a7-9e3a-2efd01dd5aee"),
                            CoverImage = "",
                            CreatedBy = new Guid("896fe1f3-a4c4-42fd-b43e-5324ed60e2f0"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description24",
                            DiscountPercent = 0m,
                            DiscountSold = 24000m,
                            IsDeleted = false,
                            Name = "Name24",
                            Price = 24000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 24,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("a5140a5f-a6f4-42d5-a838-4f4baece2073"),
                            CoverImage = "",
                            CreatedBy = new Guid("33c16661-0de8-4a46-bdb9-0af7cec6a164"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description25",
                            DiscountPercent = 0m,
                            DiscountSold = 25000m,
                            IsDeleted = false,
                            Name = "Name25",
                            Price = 25000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 25,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("92ba4058-e645-4819-83c6-47934ed37e01"),
                            CoverImage = "",
                            CreatedBy = new Guid("047c9ab5-85c5-4e4b-9020-5720d146463b"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description26",
                            DiscountPercent = 0m,
                            DiscountSold = 26000m,
                            IsDeleted = false,
                            Name = "Name26",
                            Price = 26000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 26,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("c39c4698-d630-45bb-b37d-c82492a482fb"),
                            CoverImage = "",
                            CreatedBy = new Guid("43acc5bc-5aa7-4e56-b56a-c68637fa1db7"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description27",
                            DiscountPercent = 0m,
                            DiscountSold = 27000m,
                            IsDeleted = false,
                            Name = "Name27",
                            Price = 27000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 27,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("0bb778c0-5638-42f9-8684-37a6088d3c29"),
                            CoverImage = "",
                            CreatedBy = new Guid("4e3e16aa-dff3-4d28-be00-4209d18dd5b7"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description28",
                            DiscountPercent = 0m,
                            DiscountSold = 28000m,
                            IsDeleted = false,
                            Name = "Name28",
                            Price = 28000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 28,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("d00fe4e8-485f-484c-aff2-cd44690c529e"),
                            CoverImage = "",
                            CreatedBy = new Guid("b2c3975f-0eb1-46b7-badb-ae7bf4aeca5d"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description29",
                            DiscountPercent = 0m,
                            DiscountSold = 29000m,
                            IsDeleted = false,
                            Name = "Name29",
                            Price = 29000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 29,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("e6d47ee6-43ff-416b-aef3-65266500fa79"),
                            CoverImage = "",
                            CreatedBy = new Guid("46b2e0d9-1a27-4f5a-b57e-58f92a6d16a2"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description30",
                            DiscountPercent = 0m,
                            DiscountSold = 30000m,
                            IsDeleted = false,
                            Name = "Name30",
                            Price = 30000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 30,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("4e63525d-162d-4d36-a305-e0ca37b79285"),
                            CoverImage = "",
                            CreatedBy = new Guid("34caece8-aa43-4dfc-93a4-a9082951c7ed"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description31",
                            DiscountPercent = 0m,
                            DiscountSold = 31000m,
                            IsDeleted = false,
                            Name = "Name31",
                            Price = 31000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 31,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("6f8e118e-d18d-4ab3-9abb-2946ece08327"),
                            CoverImage = "",
                            CreatedBy = new Guid("60e0db92-f9c7-4da7-a11f-0c1c7b199a76"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description32",
                            DiscountPercent = 0m,
                            DiscountSold = 32000m,
                            IsDeleted = false,
                            Name = "Name32",
                            Price = 32000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 32,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("3a00a993-b4b7-4fcb-8b0f-eed8de59ecd7"),
                            CoverImage = "",
                            CreatedBy = new Guid("838802bc-7212-433c-9d93-567e392a2d0d"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description33",
                            DiscountPercent = 0m,
                            DiscountSold = 33000m,
                            IsDeleted = false,
                            Name = "Name33",
                            Price = 33000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 33,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("63164574-f5d1-47a1-9b31-ac583ff6e13e"),
                            CoverImage = "",
                            CreatedBy = new Guid("2dba4456-7ead-4a1c-9834-8df6bad64cce"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description34",
                            DiscountPercent = 0m,
                            DiscountSold = 34000m,
                            IsDeleted = false,
                            Name = "Name34",
                            Price = 34000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 34,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("1f1e07fb-044e-4975-8c45-99ce56293b53"),
                            CoverImage = "",
                            CreatedBy = new Guid("f2cd3ebd-c6c3-42ee-b745-d7d1c38368af"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description35",
                            DiscountPercent = 0m,
                            DiscountSold = 35000m,
                            IsDeleted = false,
                            Name = "Name35",
                            Price = 35000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 35,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("3a2b5f7e-bd7b-4c3b-8895-19f89358da3a"),
                            CoverImage = "",
                            CreatedBy = new Guid("992412d1-cd33-40ff-a594-04d3df75dcfd"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description36",
                            DiscountPercent = 0m,
                            DiscountSold = 36000m,
                            IsDeleted = false,
                            Name = "Name36",
                            Price = 36000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 36,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("3dbd3b25-e721-4153-bfe8-98a1bcd9c9b5"),
                            CoverImage = "",
                            CreatedBy = new Guid("3f2abf72-166e-4713-842e-441f08159be0"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description37",
                            DiscountPercent = 0m,
                            DiscountSold = 37000m,
                            IsDeleted = false,
                            Name = "Name37",
                            Price = 37000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 37,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("414dde90-57ac-4d71-8772-25ba0cbf200d"),
                            CoverImage = "",
                            CreatedBy = new Guid("c14a4a26-c621-45cf-9511-f7dc89ceca09"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description38",
                            DiscountPercent = 0m,
                            DiscountSold = 38000m,
                            IsDeleted = false,
                            Name = "Name38",
                            Price = 38000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 38,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        },
                        new
                        {
                            Id = new Guid("696d6a1f-4cd0-4597-b0ec-1797a81ed40f"),
                            CoverImage = "",
                            CreatedBy = new Guid("e1dcdbc7-83f2-4816-88b0-a1fd10d97e52"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description39",
                            DiscountPercent = 0m,
                            DiscountSold = 39000m,
                            IsDeleted = false,
                            Name = "Name39",
                            Price = 39000m,
                            ProductCategoryId = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            Sku = 39,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2")
                        },
                        new
                        {
                            Id = new Guid("e8bdca54-27a5-45a2-a5b0-84345a88f121"),
                            CoverImage = "",
                            CreatedBy = new Guid("1ddccf79-8ac3-479e-a01f-2e9478021bcf"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Description40",
                            DiscountPercent = 0m,
                            DiscountSold = 40000m,
                            IsDeleted = false,
                            Name = "Name40",
                            Price = 40000m,
                            ProductCategoryId = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            Sku = 40,
                            Sold = 0,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorId = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1")
                        });
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("26df3c94-715f-4048-a96a-04a6e80bbd15"),
                            CreatedBy = new Guid("2cd8a571-f443-4623-97dd-c8d4a41a80bf"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Des1",
                            IsDeleted = false,
                            Name = "Cate1",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("acc02cc0-825a-4453-b923-e6ae7f4007a4"),
                            CreatedBy = new Guid("2cd8a571-f443-4623-97dd-c8d4a41a80bf"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Des2",
                            IsDeleted = false,
                            Name = "Cate2",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8d81bd6c-b108-4611-acee-ef78286eec24"),
                            CreatedBy = new Guid("2cd8a571-f443-4623-97dd-c8d4a41a80bf"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Des3",
                            IsDeleted = false,
                            Name = "Cate3",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDiscount", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductFeedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFeedback", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductMedia", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Wait")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subscription", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("SubcriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.UserAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrder")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddress", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.UserPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Cvc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTimeOffset>("Expire")
                        .HasMaxLength(20)
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrder")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserPayment", (string)null);
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankOwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedOnUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Vendor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5ef2d83-48fd-41ea-952b-c3803a59b2c1"),
                            Address = "VendorAddress1",
                            AvatarImage = "123",
                            BankAccountNumber = "123",
                            BankName = "123",
                            BankOwnerName = "123",
                            City = "VendorCity1",
                            CoverImage = "123",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "Vendor1@gmail.com",
                            IsDeleted = false,
                            Name = "Vendor1",
                            Phonenumber = "VendorPhone1",
                            Province = "VendorProvince1",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d5ab34c8-d8ce-4e30-9446-13735a334ef2"),
                            Address = "VendorAddress2",
                            AvatarImage = "123",
                            BankAccountNumber = "123",
                            BankName = "123",
                            BankOwnerName = "123",
                            City = "VendorCity2",
                            CoverImage = "123",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "Vendor2@gmail.com",
                            IsDeleted = false,
                            Name = "Vendor2",
                            Phonenumber = "VendorPhone2",
                            Province = "VendorProvince2",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("f5565937-575b-462a-903c-404727ba3765"),
                            Address = "VendorAddress3",
                            AvatarImage = "123",
                            BankAccountNumber = "123",
                            BankName = "123",
                            BankOwnerName = "123",
                            City = "VendorCity3",
                            CoverImage = "123",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "Vendor3@gmail.com",
                            IsDeleted = false,
                            Name = "Vendor3",
                            Phonenumber = "VendorPhone3",
                            Province = "VendorProvince3",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Order", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Discount", "Discount")
                        .WithMany("OrderList")
                        .HasForeignKey("DiscountId");

                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.OrderDetailFeedback", "OrderDetailFeedback")
                        .WithMany()
                        .HasForeignKey("OrderDetailFeedbackId");

                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetailList")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Product", "Product")
                        .WithMany("OrderDetailList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("OrderDetailFeedback");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderDetailFeedbackMedia", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.OrderDetailFeedback", "OrderDetailFeedback")
                        .WithMany("OrderDetailFeedbackMediaList")
                        .HasForeignKey("OrderDetailFeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderDetailFeedback");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderPayment", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Product", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.ProductCategory", "ProductCategory")
                        .WithMany("ProductList")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Vendor", "Vendor")
                        .WithMany("ProductList")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductDiscount", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Product", "Product")
                        .WithMany("ProductDiscountList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductFeedback", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Product", "Product")
                        .WithMany("ProductFeedbackList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductMedia", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Product", "Product")
                        .WithMany("ProductImageList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Subscription", "Subscription")
                        .WithMany("TransactionList")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.User", "User")
                        .WithMany("TransactionList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.User", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.UserAddress", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.User", "User")
                        .WithMany("UserAddressList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.UserPayment", b =>
                {
                    b.HasOne("Antree_Ecommerce_BE.Domain.Entities.User", "User")
                        .WithMany("UserPaymentList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Discount", b =>
                {
                    b.Navigation("OrderList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetailList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.OrderDetailFeedback", b =>
                {
                    b.Navigation("OrderDetailFeedbackMediaList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Product", b =>
                {
                    b.Navigation("OrderDetailList");

                    b.Navigation("ProductDiscountList");

                    b.Navigation("ProductFeedbackList");

                    b.Navigation("ProductImageList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.ProductCategory", b =>
                {
                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Subscription", b =>
                {
                    b.Navigation("TransactionList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.User", b =>
                {
                    b.Navigation("TransactionList");

                    b.Navigation("UserAddressList");

                    b.Navigation("UserPaymentList");
                });

            modelBuilder.Entity("Antree_Ecommerce_BE.Domain.Entities.Vendor", b =>
                {
                    b.Navigation("ProductList");
                });
#pragma warning restore 612, 618
        }
    }
}
